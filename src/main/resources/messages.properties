## common
app.description=FDR - Flussi di rendicontazione
system.error=An unexpected error has occurred. Please contact support.
bad.request=Bad request

bad.request.inputJson=Bad request. Field [{0}] is [{1}]. Not match a correct value
bad.request.inputJson.instant=Bad request. Field [{0}] is [{1}]. Expected ISO-8601 [2011-12-03T10:15:30Z] [2023-04-05T09:21:37.810000Z]
bad.request.inputJson.enum=Bad request. Field [{0}] is [{1}]. Expected value one of {2}
bad.request.inputJson.deserialize=Bad request. Field [{0}] generate an deserialize error. Set correct value

## reporting-flow rest validation
reporting-flow.create.req.notNull=Request body must be not null

reporting-flow.create.reportingFlow.notNull=Field [reportingFlow] must be not null
reporting-flow.create.reportingFlow.notBlank=Field [reportingFlow] is [{0}]. Expected not blank

reporting-flow.create.dateReportingFlow.notNull=Field [dateReportingFlow] must be not null

reporting-flow.create.regulation.notNull=Field [regulation] must be not null
reporting-flow.create.regulation.notBlank=Field [regulation] is [{0}]. Expected not blank

reporting-flow.create.dateRegulation.notNull=Field [dateRegulation] must be not null

reporting-flow.create.bicCodePouringBank.orSize=Field [bicCodePouringBank] is [{0}]. Expected length one of {1}

reporting-flow.create.sender.notNull=Field [sender] must be not null

reporting-flow.create.sender.type.notNull=Field [sender.type] must be not null

reporting-flow.create.sender.id.notNull=Field [sender.id] must be not null
reporting-flow.create.sender.id.notBlank=Field [sender.id] is [{0}]. Expected not blank

reporting-flow.create.sender.name.notNull=Field [sender.name] must be not null
reporting-flow.create.sender.name.notBlank=Field [sender.name] is [{0}]. Expected not blank

reporting-flow.create.sender.idBroker.notNull=Field [sender.idBroker] must be not null
reporting-flow.create.sender.idBroker.notBlank=Field [sender.idBroker] is [{0}]. Expected not blank

reporting-flow.create.sender.idChannel.notNull=Field [sender.idChannel] must be not null
reporting-flow.create.sender.idChannel.notBlank=Field [sender.idChannel] is [{0}]. Expected not blank

reporting-flow.create.sender.password.notNull=Field [sender.password] must be not null
reporting-flow.create.sender.password.notBlank=Field [sender.password] is [{0}]. Expected not blank


reporting-flow.create.receiver.notNull=Field [receiver] must be not null

reporting-flow.create.receiver.id.notNull=Field [receiver.id] must be not null
reporting-flow.create.receiver.id.notBlank=Field [receiver.id] is [{0}]. Expected not blank

reporting-flow.create.receiver.name.notNull=Field [receiver.name] must be not null
reporting-flow.create.receiver.name.notBlank=Field [receiver.name] is [{0}]. Expected not blank

reporting-flow.create.payments.notNull=Field [payments] must be not null
reporting-flow.create.payments.listSize=Field [payments] must be min [{0}] and max [{1}] payments

reporting-flow.create.payments.identificativoUnivocoVersamento.notNull=Field [payments.identificativoUnivocoVersamento] must be not null
reporting-flow.create.payments.identificativoUnivocoVersamento.notBlank=Field [payments.identificativoUnivocoVersamento] is [{0}]. Expected not blank

reporting-flow.create.payments.singoloImportoPagato.decimalMin=Field [payments.singoloImportoPagato] is [{0}]. Expected value > [{1}]
reporting-flow.create.payments.singoloImportoPagato.digits=Field [payments.singoloImportoPagato] is [{0}]. Expected max integer length [{1}] and max fraction length [{2}]


## reporting-flow error
reporting-flow.notFound=Reporting Flow id [{0}] not found
reporting-flow.idInvalid=Reporting Flow id [{0}] is invalid
